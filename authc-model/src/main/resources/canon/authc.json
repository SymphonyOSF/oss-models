{
	"canon": "0.0.1",
	"info": {
		"title": "Symphony 2.0 Authentication Service Model",
		"license": {
			"name": "Private"
		}
	},
	"id": "com.symphony.s2.model.authc",
  "version": "1.0",
	"basePath": "/authc/v1",
	"model": {
		"javaGenPackage": "com.symphony.s2.authc.canon",
		"javaFacadePackage": "com.symphony.s2.authc.canon.facade"
	},
  "methods": {
    "/services/{serviceId}": {
      "parameters": {
        "serviceId": {
          "in": "path",
          "description": "Service ID",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ServiceId"
          }
        }
      },
      "get": {
        "summary": "Fetch the service info for the given service ID.",
        "operationId": "fetchService",
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/ServiceInfo"
          }
        }
      }
    },
    "/users/{userId}/keys/{keyId}": {
      "parameters": {
        "userId": {
          "in": "path",
          "description": "External User ID",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        },
        "keyId": {
          "in": "path",
          "description": "Key ID",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KeyId"
          }
        }
      },
      "get": {
        "summary": "Fetch the public signing key to validate a JWT for the given user and key ID.",
        "operationId": "fetchKey",
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/PrincipalAuthcKey"
          }
        }
      }
    },
    "/users/{userId}/keys/first": {
      "parameters": {
        "userId": {
          "in": "path",
          "description": "External User ID",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        }
      },
      "get": {
        "summary": "Fetch the public signing key to validate a JWT for the given user, call the method with a keyId if possible.",
        "operationId": "fetchKey",
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/PrincipalAuthcKey"
          }
        }
      }
    },
    "/keys/{keyId}": {
      "parameters": {
        "keyId": {
          "in": "path",
          "description": "Key ID",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KeyId"
          }
        }
      },
      "get": {
        "summary": "Fetch the public signing key to validate a JWT for the environment with the given key ID.",
        "operationId": "fetchKey",
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/Jwk"
          }
        }
      }
    },
    "/support/keys": {
      "get": {
        "summary": "Fetch the public signing key to validate a JWT for the support portal for current environment.",
        "operationId": "fetchSupportKey",
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/PrincipalAuthcKey"
          }
        }
      }
    },
  "/pod/certificate/create": {
       "parameters": {
      },
	"post": {
        "summary": "Create a pod certificate",
        "operationId": "createPodCertificate",
        "payload": {
         "required": true,
          "multiple": false,
			"schema" :  {
            "$ref": "#/components/schemas/PodIdAndUrl"
         }
        },
        "response": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/PrincipalAuthcKey"
          }
        }   
       }
      }
 },
	"components": {
		"schemas": {
      "ServiceInfo":  {
        "type": "object",
        "facade": false,
        "builderFacade": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "userId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        }
      },
      "ServiceId": {
        "description": "A service identifier.",
        "type": "string"
      },
      "KeyId": {
        "description": "A key identifier (SHA-1 hash), encoded as Base64.",
        "type": "string",
        "format": "byte",
        "facade": true
      },
      "EnvironmentAuthcKey": {
        "description": "An RSA Public Key for an environment, this is the key the new standard JWTs are signed with.",
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "facade": true,
        "builderFacade": true,
        "required": [
          "jwk"
        ],
        "properties": {
          "jwk": {
            "$ref": "#/components/schemas/Jwk"
          }
        }
      },
      "PrincipalAuthcKey": {
        "description": "An RSA Public Key for a principal to authenticate with.",
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "facade": true,
        "builderFacade": true,
        "required": [
          "encodedPublicKey"
        ],
        "properties": {
          "podId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodId"
          },
          "userId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "encodedPublicKey": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/PemPublicKey"
          },
          "expirationDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          },
          "purgeDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          }
        }
      },
      "PrincipalCredential": {
        "type": "object",
        "facade": true,
        "description": "A secret credential.",
        "required": [
          "podId",
          "keyId",
          "encodedPrivateKey"
        ],
        "properties": {
          "podId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodId"
          },
          "userId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "keyId": {
            "$ref": "#/components/schemas/KeyId"
          },
          "encodedPrivateKey": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/PemPrivateKey"
          }
        }
      },
      "JwkSet": {
        "type": "object",
        "facade": true,
        "description": "A set of Json Web Keys.",
        "required": [
          "keys"
        ],
        "properties": {
          "keys": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "#/components/schemas/Jwk"
            }
          }
        }
      },
      "Jwk": {
        "type": "object",
        "facade": true,
        "description": "A Json Web Key.",
        "properties": {
          "kty": {
            "type": "string"
          },
          "use": {
            "type": "string"
          },
          "key_ops": {
            "type": "string"
          },
          "alg": {
            "type": "string"
          },
          "kid": {
            "type": "string"
          },
          "x5u": {
            "type": "string"
          },
          "x5c": {
            "type": "string"
          },
          "x5t": {
            "type": "string"
          },
          "# breaks canon x5t#S256": {
            "type": "string"
          },
          "n": {
            "type": "string"
          },
          "e": {
            "type": "string"
          },
          "d": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "dp": {
            "type": "string"
          },
          "dq": {
            "type": "string"
          },
          "qi": {
            "type": "string"
          },
          "oth": {
            "type": "string"
          },
          "r": {
            "type": "string"
          },
          "t": {
            "type": "string"
          },
          "k": {
            "type": "string"
          }
        }
      },
        "PodIdAndUrl": {
        "type": "object",
        "facade": false,
        "description": "A container for Pod related informations.",
        "properties": {
          "podId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodId"
          },
           "podUrl": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Url"
         	 },
           "podCertificate": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/PemCertificate"
        	 },
           "cleanup": {
             "type": "boolean"
          	}
          }
        }
	 }
	}
}

