{
	"canon": "0.0.1",
	"info": {
		"title": "Symphony 2.0 Authentication Service Model",
		"license": {
			"name": "Private"
		}
	},
	"id": "com.symphony.s2.model.object",
  "version": "1.0",
	"basePath": "/object/v1",
	"model": {
		"javaGenPackage": "com.symphony.oss.models.object.canon",
		"javaFacadePackage": "com.symphony.oss.models.object.canon.facade"
	},
  "methods": {
    "/test/mtCredential": {
      "get": {
        "summary": "Multi tenant credential for use with integration tests - DO NOT IMPLEMENT EXCEPT IN TESTS",
        "operationId": "getObject",
        "tags": [
          "objects"
        ],
        "response": {
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/authc.json#/components/schemas/PrincipalCredential"
          }
        }
      }
    },
    "/objects/{objectHash}": {
      "parameters": {
        "objectHash": {
          "in": "path",
          "required": true,
          "description": "The id of the object.",
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        },
        "traceContextHash": {
          "in": "query",
          "required": false,
          "description": "The id of the trace context of which this operation is a part",
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        }
      },
      "get": {
        "summary": "Read an object",
        "operationId": "getObject",
        "tags": [
          "objects"
        ],
        "parameters": {
          "currentVersion": {
            "in": "query",
            "required": false,
            "description": "If true then the hash is a baseHash and we return the current version, otherwise the hash is an absoluteHash and we return that absolute version.",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "response": {
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/AbstractStoredApplicationObject"
          }
        }
      },
      "put": {
        "summary": "Create an object",
        "operationId": "createObjects",
        "tags": [
          "objects"
        ],
        "payload": {
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AbstractStoredApplicationObject"
          }
        }
      }
    },
    "/objects/transaction": {
      "parameters": {
        "traceContextHash": {
          "in": "query",
          "required": false,
          "description": "The id of the trace context of which this operation is a part",
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        }
      },
      "post": {
        "summary": "Create several objects in a transaction.",
        "operationId": "createObjectTransaction",
        "tags": [
          "objects"
        ],
        "payload": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/AbstractStoredApplicationObject"
          }
        }
      }
    },
    "/objects/{objectHash}/versions": {
      "parameters": {
        "objectHash": {
          "in": "path",
          "required": true,
          "description": "The id of the object to retrieve",
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        },
        "limit": {
          "in": "query",
          "description": "How many items to return at one time (max 100)",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        "after": {
          "in": "query",
          "description": "after cursor from a previous query",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "scanForwards": {
          "in": "query",
          "description": "if true then scan in chronological order, else reverse",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }
      },
      "get": {
        "summary": "List the versions of an object",
        "operationId": "readVersions",
        "response": {
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PageOfAbstractStoredApplicationObject"
          }
        }
      }
    },
    "/partitions/{partitionHash}/{sortKey}": {
      "parameters": {
        "partitionHash": {
          "in": "path",
          "description": "Partition Key Value",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        },
        "sortKey": {
          "in": "path",
          "description": "Sort Key Value",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SortKey"
          }
        }
      },
      "get": {
        "summary": "Fetch the given object.",
        "operationId": "fetchObject",
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/StoredApplicationObject"
          }
        }
      }
    },
    "/partitions/{partitionHash}": {
      "parameters": {
        "partitionHash": {
          "in": "path",
          "description": "Partition Key Value",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        }
      },
      "get": {
        "summary": "Fetch the given partition.",
        "operationId": "fetchPartition",
        "response": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/Partition"
          }
        }
      }
    },
    "/partitions/{partitionHash}/users": {
      "parameters": {
        "partitionHash": {
          "in": "path",
          "description": "Partition Key Value",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        },
       "limit": {
          "in": "query",
          "description": "How many items to return at one time (max 100)",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        "after": {
          "in": "query",
          "description": "after cursor from a previous query",
          "required": false,
          "schema": {
            "type": "string"
          }
        } 
      },
   "get": {
        "summary": "List the contents of a partition",
        "operationId": "readSequence",
        "response": {
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/PageOfUserPermissions"
          }
        }
      }
    },
    
    "/partitions/upsert": {
      "parameters": {
      },
      "post": {
        "summary": "Upsert a partition",
        "operationId": "upsertPartition",
        "tags": [
          "partitions"
        ],
        "payload": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/UpsertPartitionRequest"
          }
        },
        "response": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/Partition"
          }
        }
      }
    },
    "/feeds/upsert": {
      "parameters": {
      },
      "post": {
        "summary": "Upsert a feed",
        "operationId": "upsertFeed",
        "tags": [
          "feeds"
        ],
        "payload": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/UpsertFeedRequest"
          }
        },
        "response": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/Feed"
          }
        }
      }
    },
    "/feeds/{feedHash}": {
      "parameters": {
        "feedHash": {
          "in": "path",
          "description": "Hash of Feed",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        }
      },
      "delete": {
        "summary": "Delete a feed.",
        "operationId": "deleteFeed"
        }
      },
      
     "/feeds/credentials": {
      "parameters": {
      },
      "post": {
        "summary": "Gets Temporary Credentials to access a Feed directly",
        "operationId": "getCredentials",
        "tags": [
          "feeds"
        ],
        "payload": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
         },
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/TemporaryCredentials"
          }
        }
      }
      },      
     "/feeds/endpoint": {
      "parameters": {
      },
      "post": {
        "summary": "Gets endpoint path and refreshes feed read records",
        "operationId": "getEndpoint",
        "tags": [
          "feeds"
        ],
        "payload": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
         },
        "response": {
          "required": false,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/FeedsEndpoint"
          }
        }
      }
      },
    
    "/feeds/{feedHash}/objects": {
      "parameters": {
        "feedHash": {
          "in": "path",
          "description": "Hash of Feed",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        }
      },
      "post": {
        "summary": "Fetch and/or acknowledge messages from a feed.",
        "operationId": "readFeed",
        "payload": {
          "required": true,
          "multiple": false,
          "schema": {
            "$ref": "#/components/schemas/FeedRequest"
          }
        },
        "response": {
          "required": false,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/FeedObject"
          }
        }
      }
    },
    "/feeds/fetch/aws/us-east-1": {
      "parameters": {
        "Action": {
          "in": "query",
          "description": "Receive/Delete/ChangeVisibility of feed records",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "MaxNumberOfMessages": {
          "in": "query",
          "description": "N of message to return (max 10)",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        "WaitTimeSeconds": {
          "in": "query",
          "description": "How much time the client can wait for the response",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        "VisibilityTimeout": {
          "in": "query",
          "description": "How much the visibility should be extended (in seconds)",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        "feedHash": {
          "in": "query",
          "description": "if true then scan in chronological order, else reverse",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        "ReceiptHandle": {
          "in": "query",
          "description": "Hash value of the original message, used to delete it from the queue",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      },
      "post": {
        "summary": "List the contents of a partition",
        "operationId": "readSQS",
          "response": {
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PlainText"
          }
        }
      }
    },
    "/partitions/{partitionHash}/page": {
      "parameters": {
        "partitionHash": {
          "in": "path",
          "description": "Partition Key Value",
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          }
        },
        "X-Symphony-ExternalPodId": {
          "in": "header",
          "description": "The symphony external pod ID added by API Gateway",
          "required": false,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodId"
          }
        },
        "limit": {
          "in": "query",
          "description": "How many items to return at one time (max 100)",
          "required": false,
          "schema": {
            "type": "integer",
            "format": "int32"
          }
        },
        "after": {
          "in": "query",
          "description": "after cursor from a previous query",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "sortKeyPrefix": {
          "in": "query",
          "description": "Prefix for sort key of returned objects",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        "scanForwards": {
          "in": "query",
          "description": "if true then scan in chronological order, else reverse",
          "required": false,
          "schema": {
            "type": "boolean"
          }
        }
      },
      "get": {
        "summary": "List the contents of a partition",
        "operationId": "readSequence",
        "response": {
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/PageOfStoredApplicationObject"
          }
        }
      }
    },
    "/version": {
      "parameters": {
      },
      "get": {
        "summary": "Fetch build version of the service",
        "operationId": "fetchVersion",
        "response": {
          "required": true,
          "schema": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PlainText"
          }
        }
      }
     }
  },
	"components": {
		"schemas": {
      "#PartitionKey": {
        "description": "A partition key.",
        "type": "string",
        "facade": true
      },
      "SortKey": {
        "description": "A sort key.",
        "type": "string",
        "facade": true
      },
      "IdObject": {
        "description": "An ID object, applications define IDs as a sub-type of this.",
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/ApplicationPayload",
        "facade": true,
        "required": [
          "hashType"
        ],
        "properties": {
          "hashType": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/HashType"
          }
        }
      },
      "UserIdObject": {
        "description": "An ID object belonging to a user.",
        "type": "object",
        "extends": "#/components/schemas/IdObject",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          }
        }
      },
      "NamedUserIdObject": {
        "description": "An ID object for a named object belonging to a user.",
        "type": "object",
        "extends": "#/components/schemas/UserIdObject",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "AbstractApplicationObjectPayload": {
        "type": "object",
        "facade": true,
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/ApplicationPayload",
        "builderFacade": true,
        "description": "Base type for header or encrypted payloads in the object store.",
        "properties": {
        }
      },
      "ApplicationObjectHeader": {
        "type": "object",
        "facade": true,
        "extends": "#/components/schemas/AbstractApplicationObjectPayload",
        "builderFacade": true,
        "description": "Base type for header payloads in the object store.",
        "properties": {
        }
      },
      "ApplicationObjectPayload": {
        "type": "object",
        "facade": true,
        "extends": "#/components/schemas/AbstractApplicationObjectPayload",
        "builderFacade": true,
        "description": "Base type for encrypted payloads in the object store.",
        "properties": {
        }
      },
      "AbstractStoredApplicationObject": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "facade": false,
        "builderFacade": false,
        "description": "Base type for stored application objects in the object store.",
        "required": [
          "partitionHash",
          "sortKey"
        ],
        "properties": {
          "partitionHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          },
          "sortKey": {
            "$ref": "#/components/schemas/SortKey"
          },
          "createdDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          },
          "owner": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "baseHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          },
          "prevHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          },
          "prevSortKey": {
            "$ref": "#/components/schemas/SortKey"
          },
          "purgeDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          }
        }
      },
      "EncryptedApplicationPayload": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/ApplicationPayload",
        "description": "An encrypted application object.",
        "required": [
          "encryptedPayload",
          "cipherSuiteId",
          "threadId",
          "rotationId"
        ],
        "properties": {
          "encryptedPayload": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/EncryptedData"
          },
          "cipherSuiteId": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/CipherSuiteId"
          },
          "threadId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
          },
          "rotationId": {
              "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/RotationId"
          }
        }
      },
      "EncryptedApplicationPayloadAndHeader": {
        "type": "object",
        "extends": "#/components/schemas/EncryptedApplicationPayload",

        "description": "An encrypted application object plus unencrypted header.",
        "required": [
          "header"
        ],
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ApplicationObjectHeader"
          }
        }
      },
      "StoredApplicationObject": {
        "type": "object",
        "extends": "#/components/schemas/AbstractStoredApplicationObject",
        "facade": true,
        "builderFacade": true,
        "description": "A stored application object in the object store.",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/ApplicationObjectHeader"
          },
          "encryptedPayload": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/EncryptedData"
          },
          "cipherSuiteId": {
            "$ref": "https://models.oss.symphony.com/crypto.json#/components/schemas/CipherSuiteId"
          },
          "threadId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
          },
          "rotationId": {
              "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/RotationId"
          }
        }
      },
      "ApplicationObjectNotification": {
        "type": "object",
        "extends": "#/components/schemas/AbstractStoredApplicationObject",
        "description": "A notification about a stored application object in the object store.",
        "required": [
          "absoluteHash"
        ],
        "properties": {
          "absoluteHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          },
          "payloadLen": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeletionType": {
        "type": "string",
        "enum": [
          "LOGICAL",
          "PHYSICAL"
        ]
      },
      "DeletedApplicationObject": {
        "type": "object",
        "extends": "#/components/schemas/AbstractStoredApplicationObject",
        "facade": true,
        "builderFacade": true,
        "description": "A tombstone marker for an object which was deleted.",
        "required": [
          "deletionType"
        ],
        "properties": {
          "deletionType": {
            "$ref": "#/components/schemas/DeletionType"
          }
        }
      },
      "PageOfStoredApplicationObject":  {
        "type": "object",
        "facade": false,
        "builderFacade": false,
        "required": [
          "pagination",
          "data"
        ],
        "properties": {
          "pagination": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Pagination"
          },
          "data": {
            "type": "array",
            "x-canon-cardinality": "LIST",
            "items": {
              "$ref": "#/components/schemas/StoredApplicationObject"
            }
          }
        }
      },
      "PageOfAbstractStoredApplicationObject":  {
        "type": "object",
        "facade": false,
        "builderFacade": false,
        "required": [
          "pagination",
          "data"
        ],
        "properties": {
          "pagination": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Pagination"
          },
          "data": {
            "type": "array",
            "x-canon-cardinality": "LIST",
            "items": {
              "$ref": "#/components/schemas/AbstractStoredApplicationObject"
            }
          }
        }
      },
      "PageOfUserPermissions":  {
        "type": "object",
        "facade": false,
        "builderFacade": false,
        "required": [
          "pagination",
          "data"
        ],
        "properties": {
          "pagination": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Pagination"
          },
          "data": {
            "type": "array",
            "x-canon-cardinality": "LIST",
            "items": {
              "$ref": "#/components/schemas/UserPermissionsRequest"
            }
          }
        }
      },    
      
      "Permission": {
        "type": "string",
        "enum": [
          "READ",
          "WRITE"
        ]
      },
      "UserPermissionsRequest": {
        "type": "object",
        "facade": false,
        "builderFacade": false,
        "description": "Requested resource permissions for a user.",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "permissions": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "ResourcePermissions": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "facade": false,
        "builderFacade": false,
        "description": "Resource permissions.",
        "properties": {
          "permissions": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      
      "Partition": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "facade": true,
        "builderFacade": false,
        "description": "A partition in the object store.",

        "properties": {
          "id": {
            "$ref": "#/components/schemas/UserIdObject"
          }
        }
      },
      "PartitionThread": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "facade": true,
        "builderFacade": false,
        "description": "A partition in the object store.",

        "properties": {
          "partitionId": {
            "$ref": "#/components/schemas/UserIdObject"
          },
          "threadId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/ThreadId"
          }
        }
      },
      "UpsertPartitionRequest": {
        "type": "object",
        "description": "Request to upsert a partition in the object store.",

        "properties": {
          "partitionId": {
            "$ref": "#/components/schemas/NamedUserIdObject"
          },
          "userPermissions": {
            "type": "array",
            "x-canon-cardinality": "LIST",
            "items": {
            "$ref": "#/components/schemas/UserPermissionsRequest"
            }
          }
        }
      },
      
      
      
      
      "Feed": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "description": "A Feed in the object store.",

        "properties": {
          "id": {
            "$ref": "#/components/schemas/NamedUserIdObject"
          },
          "queueName": {
            "type": "string"
          },
          "expiryTime": {
               "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/TimeStamp"
            }
        }
      },
      "FeedSubscription": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "description": "A Feed subscription in the object store.",

        "properties": {
          "feedId": {
            "$ref": "#/components/schemas/NamedUserIdObject"
          },
          "partitionHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          },
          "queueName": {
            "type": "string"
          },
          "sortKeyPrefix": {
            "type": "string"
          }
        }
      },
       "FeedReadRecord": {
        "type": "object",
        "extends": "https://models.oss.symphony.com/core.json#/components/schemas/SystemObject",
        "description": "A Feed Record which stores the date of the last feed message and TTL.",

        "properties": {
          "feedId": {
            "$ref": "#/components/schemas/NamedUserIdObject"
          },       
          "purgeDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          },
          "readDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          },
          "queueName": {
            "type": "string"
          }
		}
      },
      "PartitionSelection": {
        "type": "object",
        "description": "Reference to part of a partition.",
        "properties": {
          "partitionHash": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
          },
          "sortKeyPrefix": {
            "type": "string"
          }
        }
      },
      "UpsertFeedRequest": {
        "type": "object",
        "description": "Request to upsert a Feed in the object store.",

        "properties": {
          "feedId": {
            "$ref": "#/components/schemas/NamedUserIdObject"
          },
          "#DEPRECATED": "Use partitionSelections",
          "partitionHashes": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Hash"
            }
          },
          "partitionSelections": {
            "type": "array",
            "x-canon-cardinality": "LIST",
            "items": {
              "$ref": "#/components/schemas/PartitionSelection"
            }
          },
          "userPermissions": {
            "type": "array",
            "x-canon-cardinality": "LIST",
            "items": {
            "$ref": "#/components/schemas/UserPermissionsRequest"
            }
          },
           "expiryTime": {
               "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/TimeStamp"
            }
        }
      },
      "FeedObjectDelete": {
        "type": "object",
        "facade": true,
        "description": "Request to delete (acknowledge) a message from a feed.",
        "properties": {
          "receiptHandle": {
            "type": "string"
          }
        }
      },
      "FeedObjectExtend": {
        "type": "object",
        "facade": true,
         "description": "Request to extend the visibility timeout (nak) a message from a feed.",
        "properties": {
          "receiptHandle": {
            "type": "string"
          },
          "visibilityTimeout": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FeedObject": {
        "type": "object",
        "facade": true,
        "description": "A message from a feed.",
        "properties": {
          "messageId": {
            "type": "string"
          },
          "receiptHandle": {
            "type": "string"
          },
          "payload": {
            "$ref": "#/components/schemas/AbstractStoredApplicationObject"
          }
        }
      },
      "FeedRequest": {
        "type": "object",
        "description": "Request to fetch and/or acknowledge messages from a feed.",
        "properties": {
          "maxItems": {
            "type": "integer",
            "format": "int32"
          },
          "waitTimeSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "delete": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "#/components/schemas/FeedObjectDelete"
            }
          },
          "extend": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "#/components/schemas/FeedObjectExtend"
            }
          }
        }
      },
      
      
      
      
      "AffectedUsers": {
        "type": "object",
        "extends": "#/components/schemas/ApplicationObjectHeader",
        "facade": false,
        "builderFacade": false,
        "description": "Header type for objects in the  object store.",

        "properties": {
          "requestingUser": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
          },
          "affectedUsers": {
            "type": "array",
            "x-canon-cardinality": "SET",
            "items": {
              "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodAndUserId"
            }
          },
          "podId": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/PodId"
          },
          "effectiveDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          }
        }
      }, 
      
      "TemporaryCredentials": {
          "type": "object",
          "facade": false,
        "description": "Request to fetch and/or acknowledge messages from a feed.",
        "properties": {
          "accesskeyId": {
            "type": "string"
          },
          "secretAccessKey": {
            "type": "string"
          },
          "sessionToken": {
            "type": "string"
          },
          "directFetch": {
            "type": "boolean"
          },
          "expirationDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          },
           "queueUrls": {
            "type": "array",
            "x-canon-cardinality": "LIST",
            "items": {
              "type": "string"
            } 
           } ,
           "region": {
            "type": "string"
          },
           "endPoint": {
            "type": "string"
          }                 
      }
      },      
     "FeedsEndpoint": {
          "type": "object",
          "facade": false,
        "description": "Record needed to enable direct fetch from SQS",
        "properties": {
          "directFetch": {
            "type": "boolean"
          },
           "endPoint": {
            "type": "string"
          },
           "expirationDate": {
            "$ref": "https://models.oss.symphony.com/core.json#/components/schemas/Instant"
          }                 
      }
      }
    }
	}
}
